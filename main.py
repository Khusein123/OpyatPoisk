import os
import telebot
import threading
import time
from flask import Flask
from keep_alive import keep_alive
from monitor import MonitorManager
import userauth
userauth.register_handlers(bot)
from menu import MenuBuilder
import os
TOKEN = "7905547591:AAEivoneinmUDRtg7hvBkGPEPPAegMC36uc"
CHAT_ID = "5292727929"
bot = telebot.TeleBot(TOKEN)

auth = UserAuth()
monitor = MonitorManager(bot, auth)
menu = MenuBuilder(bot)

@bot.message_handler(commands=['start'])
def start_cmd(message):
    menu.send_main_menu(message.chat.id)

@bot.message_handler(func=lambda m: m.text == "üîç –ü–æ–∏—Å–∫–∏")
def start_search(m):
    monitor.command_monitor(m)

@bot.message_handler(func=lambda m: m.text == "üìÑ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è")
def show_help(m):
    bot.send_message(m.chat.id, "–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥, –∞–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –∫–ª—é—á –≤ —Ä–∞–∑–¥–µ–ª–µ '–ê–∫–∫–∞—É–Ω—Ç'.")

@bot.message_handler(func=lambda m: m.text == "üíº –ü–æ–¥–¥–µ—Ä–∂–∫–∞")
def support(m):
    bot.send_message(m.chat.id, "–ù–∞–ø–∏—à–∏—Ç–µ @Meneger_PoiskIphone –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∫–ª—é—á–µ–π.")

@bot.message_handler(func=lambda m: m.text == "üë§ –ê–∫–∫–∞—É–Ω—Ç")
def account(m):
    user_id = str(m.from_user.id)
    if auth.is_key_active(user_id):
        bot.send_message(m.chat.id, "‚úÖ –ö–ª—é—á –∞–∫—Ç–∏–≤–µ–Ω.")
    else:
        bot.send_message(m.chat.id, "‚ùå –ö–ª—é—á –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω. –í–≤–µ–¥–∏—Ç–µ: /activate –ö–õ–Æ–ß")

@bot.message_handler(commands=['activate'])
def activate_key(m):
    parts = m.text.split()
    if len(parts) == 2:
        result = auth.activate_key(str(m.from_user.id), parts[1])
        bot.send_message(m.chat.id, result)
    else:
        bot.send_message(m.chat.id, "‚ùó –§–æ—Ä–º–∞—Ç: /activate –ö–õ–Æ–ß")

@bot.message_handler(commands=['genkey'])
def generate_key(m):
    if str(m.chat.id) == CHAT_ID:
        key = auth.generate_key()
        bot.send_message(m.chat.id, f"üîë –ù–æ–≤—ã–π –∫–ª—é—á: {key}")
    else:
        bot.send_message(m.chat.id, "‚õî –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–ª—é—á–∏.")

keep_alive()
threading.Thread(target=monitor.loop).start()
bot.polling(none_stop=True)
